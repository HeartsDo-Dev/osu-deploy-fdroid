# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  schedule:
  - cron: "0 0 * * *"
  workflow_dispatch:
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  work:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get the last release
      id: nrelease
      uses: pozetroninc/github-action-get-latest-release@v0.4.0      
      with:
        repository: 'ppy/osu'

    - name: Verify number version
      env:
        lv: ${{ steps.nrelease.outputs.release }}
      run: |
           sudo apt install -y python3
           python3 verify-version.py
           
    - name: Download package for build and deploy
      run: |
           wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
           sudo dpkg -i packages-microsoft-prod.deb
           sudo apt update; \
           sudo apt install -y apt-transport-https && \
           sudo apt update && \
           sudo apt install -y dotnet-sdk-3.1 fdroidserver
           wget https://artprodcus3.artifacts.visualstudio.com/Ad0adf05a-e7d7-4b65-96fe-3f3884d42038/6fd3d886-57a5-4e31-8db7-52a1b47c07a8/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL3hhbWFyaW4vcHJvamVjdElkLzZmZDNkODg2LTU3YTUtNGUzMS04ZGI3LTUyYTFiNDdjMDdhOC9idWlsZElkLzIzNzQ3L2FydGlmYWN0TmFtZS9MaW51eCtQYWNrYWdlcw2/content?format=zip -O "Linux Packages.zip"
           unzip "Linux Packages.zip"
           cd "Linux Packages" && sudo dpkg -i xamarin.android-oss_11.1.99.0_amd64.deb
     
    - name: Checkout git Osu!Laser
      uses: actions/checkout@v2
      with:
        repository: 'ppy/osu'
        ref: 'refs/tags/${{ steps.nrelease.outputs.release }}'
        path: 'osu/'
        
    - name: Build Osu!Laser
      env:
        version: ${{ steps.nrelease.outputs.release }}
      run: |
           python3 amhack.py
           dotnet build $GITHUB_WORKSPACE/osu/osu.Android/ -c "Release"
