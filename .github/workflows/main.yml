# This is a basic workflow to help you get started with Actions

name: Deploy osu!laser

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  recompile-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get the last release
      id: nrelease
      uses: pozetroninc/github-action-get-latest-release@v0.4.0      
      with:
        repository: 'ppy/osu'

    - name: Verify number version
      env:
        lv: ${{ steps.nrelease.outputs.release }}
      run: python3 verify-version.py
           
    - name: Download osu!laser apk
      run: wget https://github.com/ppy/osu/releases/download/${{ steps.nrelease.outputs.release }}/sh.ppy.osulazer.apk
    
    - name: Download package for recompile and deploy
      run: |
           sudo apt-get install fdroidserver ssh rsync
           
    - name: Prepare deploy
      uses: actions/checkout@v2
      with:
        repository: "HeartsDo-Dev/keystore-fdroid"
        token: ${{ secrets.PAT }}
        path: "deploy/"
    
    - name: Deploy app
      run: |
           mv "sh.ppy.osulazer.apk" "deploy/repo/sh.ppy.osulazer.apk"
           mkdir ~/.ssh && touch ~/.ssh/ssh_config && echo "StrictHostKeyChecking no" > ~/.ssh/ssh_config
           cd deploy && fdroid deploy -v
           rm "sh.ppy.osulazer.apk"
    
    - name: Push repo settings and deploy version on Github
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT }}
    - run: |
           git config --global user.name github-actions
           git config --global user.email github-actions@github.com
           cd "deploy/" && git add * && git commit -m "Updating repository" && git push
           cd "../" && git add config.py && git commit -m "Update version number" && git push
